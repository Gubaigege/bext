{
  "name": "示例脚本",
  "version": "7",
  "tags": [
    "测试"
  ],
  "synopsis": "这里显示示例脚本的简介，限制在 70 字以内。",
  "detail": "<h1>这里是示例脚本的详情</h1><h2>二级标题</h2><p class=\"ql-align-center\">中间对齐</p><p><strong>粗体 </strong><em>斜体 </em><u>下划线</u><s> 删除线 </s></p><blockquote>引用</blockquote><pre class=\"ql-syntax\" spellcheck=\"false\">console.log('hello world');\n</pre><ol><li>列表1</li><li>列表2</li><li>列表3</li><li>列表4</li></ol><p><br></p><p><br></p><p><span style=\"color: rgb(136, 136, 136);\">小灰</span><span style=\"color: rgb(0, 102, 204);\"> 小蓝 </span></p><p><br></p>",
  "type": "javascript",
  "source": "import { name, id, version } from '@bext/context';\nimport { runOnce, addElement, loadScript, addStyle, checkUpdate } from '@bext/util';\nimport { alook_install, via_install, buildMethods } from '@bext/browser';\n\nrunOnce(() => {\n    console.log('这里将只会被执行一次');\n    console.log(`当前的脚本名称：${name}，ID：${id}，版本：${version}`);\n\n    // 向 body 中添加一个元素\n    const el = addElement({\n        tag: 'div',\n        attrs: { id: 'myDiv' },\n        to: document.body\n    });\n\n    // 加载远程脚本，也可以用 await\n    loadScript('https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js')\n        .then(() => console.log('加载成功！'))\n        .catch(() => console.log('加载失败'));\n\n    // 向 head 添加一个 css 样式\n    addStyle(`\n        #ad {\n            display: none;\n        }\n    `);\n\n    // 以7天为间隔检查脚本更新\n    checkUpdate(7).then((url) => {\n        if (url && confirm('当前脚本有更新，是否前往更新')) {\n            window.open(url);\n        }\n    });\n\n    const browser = buildMethods({ alook_install, via_install });\n    // 给 alook, via 安装一个脚本\n    browser('install', {/* xxx */ });\n});\n",
  "build": "(function () {\n  'use strict';\n\n  const id = decodeURIComponent('example');\n  const name = decodeURIComponent('%E7%A4%BA%E4%BE%8B%E8%84%9A%E6%9C%AC');\n  const version = decodeURIComponent('7');\n  const bextHome = decodeURIComponent('https%3A%2F%2Fbext.ketra.fun');\n\n  function detectBrowser() {\n    return window.via && (window.via.cmd || window.via.openSettings)\n      ? 'via'\n      : window.alook && window.alook.addon\n      ? 'alook'\n      : window.mbrowser && window.mbrowser.getBrowsreInfo\n      ? 'x'\n      : window.bz && window.bz.addScript\n      ? 'bz'\n      : window.sharkbrowser && window.sharkbrowser.installAddon\n      ? 'shark'\n      : window.lit && window.lit.addon\n      ? 'lit'\n      : undefined;\n  }\n\n  function base64(str) {\n    return window.btoa(unescape(encodeURIComponent(str)));\n  }\n\n  function runOnce(fn) {\n    const uniqId = 'BEXT_UNIQ_ID_' + id;\n    if (window[uniqId]) {\n      return;\n    }\n    window[uniqId] = true;\n    fn && fn();\n  }\n\n  function addElement({ tag, attrs = {}, to = document.body }) {\n    const el = document.createElement(tag);\n    Object.assign(el, attrs);\n    to.appendChild(el);\n    return el;\n  }\n\n  function loadScript(src) {\n    return new Promise((resolve, reject) => {\n      addElement({\n        tag: 'script',\n        attrs: {\n          src,\n          type: 'text/javascript',\n          onload: resolve,\n          onerror: reject,\n        },\n      });\n    });\n  }\n\n  function addStyle(css) {\n    return addElement({\n      tag: 'style',\n      attrs: {\n        textContent: css,\n      },\n      to: document.head,\n    });\n  }\n\n  const LAST_CHECK_KEY = `BEXT_LAST_CHECK_KEY_${id}`;\n  async function checkUpdate(day = 7) {\n    const lastCheck = Number(localStorage.getItem(LAST_CHECK_KEY));\n    localStorage.setItem(LAST_CHECK_KEY, Date.now());\n\n    if (\n      !Number.isNaN(lastCheck) &&\n      (Date.now() - lastCheck) / (24 * 60 * 60) <= Math.min(3, day)\n    ) {\n      return;\n    }\n    try {\n      const response = await fetch(\n        `https://cdn.jsdelivr.net/gh/ikkz/bext@master/meta/${id}.json`,\n      );\n      const meta = await response.json();\n      if (meta.version != version) {\n        return `${bextHome}/meta/${id}`;\n      }\n    } catch (error) {}\n  }\n\n  const errorCatch = (fn) => {\n    return (...args) => {\n      try {\n        return {\n          code: 0,\n          result: fn?.(...args),\n        };\n      } catch (error) {\n        return { code: error.bextCode ?? -1 };\n      }\n    };\n  };\n\n  const buildMatch = (match, sep, all) => {\n    if (match && match.length) {\n      return match.join(sep);\n    }\n    return all;\n  };\n\n  const via_install = errorCatch((meta) =>\n    window.via.addon(\n      base64(\n        JSON.stringify({\n          id: meta.id,\n          name: meta.name,\n          author: meta.author,\n          url: buildMatch(meta.match, ',', '*'),\n          code: base64(meta.build),\n        }),\n      ),\n    ),\n  );\n\n  const alook_install = errorCatch((meta) =>\n    window.alook.addon(\n      base64(\n        encodeURIComponent(\n          JSON.stringify({\n            id: meta.id,\n            name: meta.name,\n            author: meta.author,\n            url: buildMatch(meta.match, '@@', '*'),\n            code: base64(meta.build),\n          }),\n        ),\n      ),\n    ),\n  );\n\n  const buildMethods = (impls) => {\n    const browser = detectBrowser();\n    return (method, ...args) => {\n      const fn = impls[`${browser}_${method}`];\n      return fn ? fn(...args) : { code: -1 };\n    };\n  };\n\n  runOnce(() => {\n      console.log('这里将只会被执行一次');\n      console.log(`当前的脚本名称：${name}，ID：${id}，版本：${version}`);\n\n      // 向 body 中添加一个元素\n      addElement({\n          tag: 'div',\n          attrs: { id: 'myDiv' },\n          to: document.body\n      });\n\n      // 加载远程脚本，也可以用 await\n      loadScript('https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js')\n          .then(() => console.log('加载成功！'))\n          .catch(() => console.log('加载失败'));\n\n      // 向 head 添加一个 css 样式\n      addStyle(`\n        #ad {\n            display: none;\n        }\n    `);\n\n      // 以7天为间隔检查脚本更新\n      checkUpdate(7).then((url) => {\n          if (url && confirm('当前脚本有更新，是否前往更新')) {\n              window.open(url);\n          }\n      });\n\n      const browser = buildMethods({ alook_install, via_install });\n      // 给 alook, via 安装一个脚本\n      browser('install', {/* xxx */ });\n  });\n\n})();\n",
  "options": {}
}
